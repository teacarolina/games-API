/* useEffect( ()=> {
        async()=> {
            const response = await axios.post(`https://id.twitch.tv/oauth2/token?client_id=zgao4xf0o3wp5ovfyc4hs938f4r74i&client_secret=xeogohpj6jqdd03e3kd0qwjebptyo8&grant_type=client_credentials`)
            setToken(response.data.access_token)
        }

        const fetchAllGames = async()=> {
        const response = await axios.post(`https://api.igdb.com/v4/games`, {

        headers: {
            'Client-ID': 'zgao4xf0o3wp5ovfyc4hs938f4r74i',
            'Authorization': 'Bearer token'
            }
     
        }) 

        setAllGames(response.data)

        }
        
        fetchAllGames();
    }, []) 
    
    import React, {useState, useEffect} from 'react'
import axios from "axios"

function ResultTable() {

    const [allGames, setAllGames] = useState([]);
    const [token, setToken] = useState([]);

    /* useEffect( ()=> {
        const fetchAllGames = async()=> {
            const response = await axios.post(`https://id.twitch.tv/oauth2/token?client_id=zgao4xf0o3wp5ovfyc4hs938f4r74i&client_secret=xeogohpj6jqdd03e3kd0qwjebptyo8&grant_type=client_credentials`, //{

          //      headers: {
            //        'Client-ID': 'zgao4xf0o3wp5ovfyc4hs938f4r74i',
              //      'Authorization': 'Bearer xeogohpj6jqdd03e3kd0qwjebptyo8'
                //}
            //}
            )
            setToken(response.data.access_token)
            
            setAllGames(response.data)
        }
        fetchAllGames();
        console.log(allGames);
    }, []) */
/* second version not working
    useEffect( ()=> {
        
        const fetchToken = async()=> {
            const response = await axios.post(`https://id.twitch.tv/oauth2/token?client_id=zgao4xf0o3wp5ovfyc4hs938f4r74i&client_secret=xeogohpj6jqdd03e3kd0qwjebptyo8&grant_type=client_credentials`)

            setToken(response.data.access_token)
            
        }

        fetchToken();

        const fetchAllGames = async()=> {
        const response = await axios.post(`https://api.igdb.com/v4/games`, {
            
        headers: {
            'Client-ID': 'zgao4xf0o3wp5ovfyc4hs938f4r74i',
            'Authorization': `Bearer ${bearer}`
            }
     
        }) 
        console.log(response)
        setAllGames(response.data)

        }
        
        fetchAllGames();
    }, [])
 
    

    // axios.delete(`http://localhost:1337/bookings/${bookingId}`, {
        //headers: {
          //  Authorization: `Bearer ${token}`,
       // }
   // })
   useEffect( ()=> {
    fetchToken();

}, [])

function fetchToken() {
    const fetchToken = async()=> {
        const response = await axios.post(`https://id.twitch.tv/oauth2/token?client_id=zgao4xf0o3wp5ovfyc4hs938f4r74i&client_secret=xeogohpj6jqdd03e3kd0qwjebptyo8&grant_type=client_credentials`)
   setToken(response.data.access_token)
    }
    fetchToken();
}

function printToken() {
    console.log(token)
    
    //const allGames = async()=> {
    const response = axios.post(`https://api.igdb.com/v4/games`, {
        headers: {
            'Accept': 'application/json',
            'Client-ID': 'zgao4xf0o3wp5ovfyc4hs938f4r74i',
            'Authorization': `Bearer ${token}`
        },
    }).then(response =>{
        console.log(response)
        setAllGames(response.data)  
    }) 
}

return (
    <>
        <div class="w-full max-w-2xl mx-auto bg-white shadow-lg rounded-sm border border-gray-200">
      
      <div class="p-3">
          <div class="overflow-x-auto">
              <table class="table-auto w-full">
                  <thead class="text-xs font-semibold uppercase text-gray-400 bg-gray-50">
                      <tr>
                          <th class="p-2 whitespace-nowrap">
                              <div class="font-semibold text-left">Game cover image</div>
                          </th>
                          <th class="p-2 whitespace-nowrap">
                              <div class="font-semibold text-left">Name</div>
                          </th>
                          <th class="p-2 whitespace-nowrap">
                              <div class="font-semibold text-left">Genre</div>
                          </th>
                          
                      </tr>
                  </thead>
                  <tbody class="text-sm divide-y divide-gray-100">
                      <tr>
                          <td class="p-2 whitespace-nowrap">
                              <div class="flex items-center">
                                  <div class="w-10 h-10 flex-shrink-0 mr-2 sm:mr-3"><img class="rounded-full" src="https://raw.githubusercontent.com/cruip/vuejs-admin-dashboard-template/main/src/images/user-36-05.jpg" width="40" height="40" alt="Alex Shatov"/></div>
                                  
                              </div>
                          </td>
                          <td class="p-2 whitespace-nowrap">
                              <div class="text-left font-medium text-gray-800">Red Dead Redemption</div>
                          </td>
                          <td class="p-2 whitespace-nowrap">
                              <div class="text-left font-medium text-gray-800">RGPA</div>
                          </td>
                          
                      </tr>
                      </tbody>
              </table>
              </div>
      </div>
  </div>
    </>
)
}

export default ResultTable
*/
